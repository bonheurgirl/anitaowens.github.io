reddit <- read.csv("~/Downloads/reddit.csv")
View(reddit)
str(reddit)
aplot(data=reddit, x = age.range)
qplot(data=reddit, x=age.range)
libarary(ggplot2)
library(ggplot2)
qplot(data = reddit, x = age.range)
savehistory("~/env_history.Rhistory")
save.image("~/env.RData")
load("~/env.RData")
str(reddit)
msg("testing 1 2 3 4")
msg="testing"
library(ggplot2)
qplot(data=reddit,x=gender )
save.image("~/env.RData")
savehistory("~/env_history.Rhistory")
qplot(data=reddit,x=income.range)
ordered.age<-factor(age.range levels = c("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above")
ordered.age<-factor(age.range, levels = c("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above")
ordered.age
reddit<-factor(reddit$age.range,levels =c ("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above") )
qplot(data=reddit,x=income.range)
qplot(data=reddit, x=age.range)
qplot(data=reddit, x=employment.status)
reddit$age.range <-factor(reddit$age.range, levels = c ("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above"))
qplot(data = reddit, x = $income.range)
qplot(data = reddit, x = income.range)
age.range.new<-factor(reddit$age.range, labels = ("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above"))
age.range.new<-factor(reddit$age.range, labels = ("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above"))
age.range.new<-factor(reddit$age.range, labels = ("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above"))
age.range.new<-factor(age.range, labels = ("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above"))
new<-factor(age.range, labels = ("Under 18", "18-24", "25-34", "35-44", "45-54","65 or Above"))
names(reddit)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x > 5) {
x <- 0
}
x
q()
library(ggplot2)
qplot(data=pseudo_facebook, x=friend_count)
New_York_City_Leading_Causes_of_Death <- read.csv("~/Downloads/New_York_City_Leading_Causes_of_Death.csv")
View(New_York_City_Leading_Causes_of_Death)
sum(New_York_City_Leading_Causes_of_Death)
names(New_York_City_Leading_Causes_of_Death
)
head(New_York_City_Leading_Causes_of_Death)
library(ggplot2)
qplot(data=New_York_City_Leading_Causes_of_Death, x=Cause.of.Death)
sapply(New_York_City_Leading_Causes_of_Death, mean, na.rm=TRUE)
library(psych)
swirl()
library(swirl)
swirl()
evaluate <- function(func, dat){
return sum(dat)
}
evaluate <- function(func, dat){
sum(dat)
}
evaluate(sum,2)
evaluate(sum,c(2,2))
evaluate <- function(func, dat){
function(dat)
}
evaluate <- function(func, dat){
fun(dat)
}
evaluate(sum,c(2,2))
evaluate <- function(func, dat){
func(dat)
}
evaluate(sum,c(2,2))
evaluate(sum,c(2,2,6,8))
evaluate(mean,c(2,2,6,8))
swirl()
evaluate <- function(func, dat){
function(dat)
# Remember: the last expression evaluated will be returned!
}
evaluate <- function(func, dat){
function(dat)
}
View(evaluate)
evaluate(mean,c(2,2,6,8))
evaluate(sum, c(2, 4, 6))
evaluate(median, c(7, 40, 9))
evaluate(floor, 11.1
)
?help
swirl()
submit()
evaluate <- function(func, dat){
function(dat)
}
evaluate(sum, c(2, 4, 6))
evaluate <- function(func, dat){
function(dat)
}
evaluate <- function(func, dat){
func(dat)
}
evaluate(sum, c(2, 4, 6))
evaluate <- function(func, dat){
func(dat)
}
submit()
evaluate <- function(func, dat){
sum(dat)
}
submit()
evaluate <- function(func, dat){
func(dat)
}
evaluate(sum, c(2,4,6))
submit()
evaluate(floor,11.1)
evaluate(floor, 11.1)
evaluate <- function(func, dat){
func(dat)
}
evaluate(floor, 11.1)
submit()
evaluate <- function(func, dat){
func(dat)
}
submit()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x), c(8,4,0))
evaluate(function, c(8,4,0))
quit()
library(datasets)
data("iris")
?iris
mean(iris$Sepal.Length)
library(datasets)
data("mtcars")
?mtcars
?tapply
debug(ls)
ls()
quit()
summary(mtcars)
efficient<-subset(mtcars, mpg >=23)
View(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
View(mtcars)
subset(mtcars, qsec<=16.90)
lightCars<-subset(mtcars, wt<=2.0)
View(lightCars)
mtcars$year <- 1974
View(mtcars)
library(datasets)
data("mtcars")
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg)
names(mtcars)
levels(mtcars$cyl)
View(mtcars)
View(iris)
View(iris)
View(iris)
m <- matrix(c(1:10, 11:20), nrow = 10, ncol = 2)
View(m)
apply(m, 1, mean)
apply(m, 2, mean)
View(iris)
apply(iris, 2, mean)
View(iris)
apply(iris[, 1:4], 2, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
abs(15.10000-26.66364)
b<-(26.66364-15.10000)
View(b)
abs(b)
abs(1.2)
debug(ls)
quit()
quit()
View(iris)
with(iris,tapply(Sepal.Length,Species,mean))
apply(iris[, 1:4], 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
b<-(26.66364-15.10000)
c<-(15.10000-26.66364)
View(mtcars)
four_cyl<-mtcars[ which(mtcars$cyl==4),]
eight_cyl<-mtcars[ which(mtcars$cyl==8),]
mean(four_cyl$mpg)
mean(four_cyl$hp)
mean(eight_cyl$hp)
abs(mean(eight_cyl$hp-four_cyl$hp))
209.2143-82.63636
mean(eight_cyl$hp)-mean(eight_cyl$hp)
pseudo_facebook <- read.delim("~/Documents/datasciencecoursera/EDA_Course_Materials/lesson3/pseudo_facebook.tsv")
View(pseudo_facebook)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:xlsxjars", unload=TRUE)
detach("package:xlsx", unload=TRUE)
DATA.gov_NGAP <- read.table("~/Documents/datasciencecoursera/DATA.gov_NGAP.xlsx", header=TRUE, quote="\"")
View(DATA.gov_NGAP)
View(DATA.gov_NGAP)
View(DATA.gov_NGAP)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:xlsxjars", unload=TRUE)
library("xlsxjars", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("xml2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
reddit <- read.csv("~/Documents/datasciencecoursera/reddit.csv")
View(reddit)
qplot(data = reddit, x = age.range)
qplot(data=reddit, x=employment.status)
load("~/Documents/datasciencecoursera/merge_files")
pseudo_facebook <- read.delim("~/Documents/datasciencecoursera/pseudo_facebook.tsv")
View(pseudo_facebook)
ggplot(data = pseudo_facebook, aes(x = age)) +
geom_histogram() +
scale_x_discrete(breaks = 1:110)
qplot(data=pseudo_facebook, x=age, binwidth=1, color = I('#9999CC'), fill = I('#F79420'))+ scale_x_discrete(breaks = seq(0,113,5)) + labs(title = "Facebook Ages") + ylab("# of Facebook Users")
install.packages("RMySQL")
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
library("RMySQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb
)''
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
View(result)
hg19<-dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData<-dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query); quantile(affyMis$misMatches)
ucscDb<-dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
View(result)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query); quantile(affyMis$misMatches)
affyMisSmall<-fetch(query, n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
myapp=oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
myapp<-oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
oauth_endpoints("github")
GET https://github.com/login/oauth/authorize
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
oauth_endpoints("github")
myapp<-oauth_app("github",  key = "3aebf8287d62d381f39a", secret = "fa76549cc15540ed26e316b2a207a3a06ec393ef")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
View(`authorize?client_id=3aebf8287d62d381f39a&scope=&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2`)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
summary(myapp)
summary(req)
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
contact.html <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff5ae86f2a", quote="\"")
View(contact.html)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
doc<-xmlTreeParse(fileUrl,useInternal=FALSE)
library("xml2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
doc<-xmlTreeParse(fileUrl,useInternal=FALSE)
xmlParse("http://biostat.jhsph.edu/~jleek/contact.html", asText = TRUE)
doc1<-xmlParse("http://biostat.jhsph.edu/~jleek/contact.html", isHTML = TRUE)
class(doc1)
doc1<-htmlParse("http://biostat.jhsph.edu/~jleek/contact.html")
View(doc1)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html")
View(doc)
class(doc)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", uuseInternalNodes = FALSE)
htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", uuseInternalNodes = FALSE)
doc<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = FALSE)
class(doc)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
View(rootNode)
fileUrl<-"http://www.w3schools.com/xml/simple.xml"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
nchar(doc, type = "chars")
distribution+global
ex<-"distribution" + "global"
xmlChildren(doc2)
acs <- read.csv("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff69b6b10e")
View(acs)
install.packages(sqldf)
library(RMySQL)
data("Titanic", package"PASWR")
data("Titanic")
head(Titanic)
colnames(Titanic)
DF=sqldf(‘select count(*) total from titanic3 where age=29 group by survived’)
library(ggplot2)
unique(acs$AGEP)
?read.fortran
read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
wksst8110 <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff538665a", header=TRUE, quote="\"")
View(wksst8110)
read.delim("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
read.delim("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
?tempfile
fortdata<-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
fortdata<-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", as.is = TRUE, colClasses = NA)
data <-read.fortran("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", format=F1.0, as.is = TRUE, colClasses = NA)
`getdata%2Fwksst8110` <- read.table("/var/folders/x0/d4958p9j30ndvrzls4lbn0qr0000gn/T//Rtmpru2dtQ/dataeff3be3087e", header=TRUE, quote="\"")
View(`getdata%2Fwksst8110`)
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
xmlChildren(doc2)
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(XML)
fileUrl<-"http://biostat.jhsph.edu/~jleek/contact.html"
doc2<-htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = TRUE)
rootNode<-xmlRoot(doc2)
xmlName(rootNode)
names(rootNode)
xmlChildren(doc2)
html2 <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
cont = content(html2, as = "text")
html2 <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
cont = content(html2, as = "text")
install.packages("rPython")
library(rPython)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
aftonbladet_sex_survey <- read.csv("~/Documents/datasciencecoursera/aftonbladet_sex_survey.csv", comment.char="#")
View(aftonbladet_sex_survey)
summ(aftonbladet_sex_survey)
summary(aftonbladet_sex_survey)
dim.data.frame(aftonbladet_sex_survey)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div<- z / my_sqrt
my_div
c(1,2,3)+ c(0,10)
c(1,2,3,4)+ c(0,10)
c(1,2,3,4)+ c(0,10, 100)
z * 2 + 1000
my_div
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y<-x-3
y
z<- c(1.1,9,3.14)
?c
z
c(z,55,z)
c(z,555,z)
z * 2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
c(1,2,3,4) + c(0,10, 1000)
z * 2 + 1000
my_div
swirl()
1
swirl()
data("cars")
data("cars")
data(cars)
?cars
head(cars)
quit()
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
rm(list=ls())
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col=blues)
boxplot(ppm, color=blue)
boxplot(ppm, color="blue")
boxplot(ppm, col ="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
View(high)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=medipan(ppm), col="magenta", lwd=4)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg<-table(pollution$region)
table
reg
barplot(reg, col="wheat", main = "Number of Counties in Each Region")
boxplot(pollution, pm25~region, col ="red")
boxplot(pm25~region, col ="red")
boxplot(pollution pm25~region, col ="red")
boxplot(date=pollution, pm25~region, col ="red")
boxplot(data =pollution, pm25~region, col ="red")
quit()
setwd("/Users/anitaowens/Documents/anitaowens.github.io")
getwd()
setwd("/Users/anitaowens/Documents/anitaowens.github.io/hyper")
getwd()
library(foreign)
db = file.choose()
dataset = read.spss(db, to.data.frame = TRUE, use.missings = to.data.frame)
dataset = read.spss(db, to.data.frame = TRUE)
